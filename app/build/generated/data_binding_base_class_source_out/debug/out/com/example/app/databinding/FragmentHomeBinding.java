// Generated by view binder compiler. Do not edit!
package com.example.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CalendarView;
import android.widget.EditText;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CalendarView DatePicker;

  @NonNull
  public final ConstraintLayout fragmentHome;

  @NonNull
  public final EditText reasonforleave;

  @NonNull
  public final Spinner spinnerLeaves;

  @NonNull
  public final ConstraintLayout textInputLayout;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView, @NonNull CalendarView DatePicker,
      @NonNull ConstraintLayout fragmentHome, @NonNull EditText reasonforleave,
      @NonNull Spinner spinnerLeaves, @NonNull ConstraintLayout textInputLayout) {
    this.rootView = rootView;
    this.DatePicker = DatePicker;
    this.fragmentHome = fragmentHome;
    this.reasonforleave = reasonforleave;
    this.spinnerLeaves = spinnerLeaves;
    this.textInputLayout = textInputLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Date_picker;
      CalendarView DatePicker = rootView.findViewById(id);
      if (DatePicker == null) {
        break missingId;
      }

      ConstraintLayout fragmentHome = (ConstraintLayout) rootView;

      id = R.id.reasonforleave;
      EditText reasonforleave = rootView.findViewById(id);
      if (reasonforleave == null) {
        break missingId;
      }

      id = R.id.spinner_leaves;
      Spinner spinnerLeaves = rootView.findViewById(id);
      if (spinnerLeaves == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      ConstraintLayout textInputLayout = rootView.findViewById(id);
      if (textInputLayout == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, DatePicker, fragmentHome,
          reasonforleave, spinnerLeaves, textInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
